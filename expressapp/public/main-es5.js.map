{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/user.service.ts","webpack:///src/app/userhome/userhome.component.ts","webpack:///src/app/userhome/userhome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginComponent","_router","_user","localStorage","_snackBar","loginForm","email","required","password","navigate","login","JSON","stringify","value","pipe","res","setItem","user","_id","error","open","duration","subscribe","moveToRegister","RegisterComponent","_userService","registerForm","username","cpass","valid","controls","register","console","log","moveToLogin","UserService","_http","body","post","observe","headers","append","withCredentials","get","update","providedIn","UserhomeComponent","depositeForm","balance","newBalance","logout","userId","getItem","UpdateBalance","updateBalance","withdrawBalance","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserhomeComponent } from './userhome/userhome.component';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'login', pathMatch:'full'},\n  {path:'login', component:LoginComponent},\n  {path:'register', component:RegisterComponent},\n  {path:'user', component:UserhomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/register']\">Keenan's Kash</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"active\">Register\n                  <span class=\"sr-only\">(current)</span>\n              </a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"active\">Login</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/user']\" routerLinkActive=\"active\">User Page</a>\n          </li>\n      </ul>\n  </div>\n</nav>\n\n<div class=\"continer-fluid\">\n  <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n          <router-outlet></router-outlet>\n      </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserhomeComponent } from './userhome/userhome.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {UserService} from './user.service'\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserhomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport {tap, catchError} from 'rxjs/operators';\nimport { UserResponse } from '../models/user.model';\nimport { throwError } from 'rxjs';\nimport { error } from '@angular/compiler/src/util';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  loginForm : FormGroup = new FormGroup({\n    email:new FormControl(null,[Validators.email,Validators.required]),\n    password:new FormControl(null,Validators.required)\n  });\n  constructor(private _router:Router, private _user:UserService, protected localStorage:LocalStorage, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(){\n   \n    }\n\n  moveToRegister(){\n    this._router.navigate(['/register']);\n  }\n\n  login(){\n    this._user.login(JSON.stringify(this.loginForm.value)).\n    pipe(\n      tap((res:UserResponse)=>{\n        localStorage.setItem('_id',res.user._id); \n        this._router.navigate(['/user']);\n      }),\n      catchError((error)=>{\n        this._snackBar.open('Error, invalid email or password','X',{\n          duration:4000\n        });\n        throw error;\n      })\n    ).subscribe();\n  }\n  \n  \n}\n","<div class=\"row\" style=\"margin-top:40px; padding:20px; background-color:#00CED1;border-radius:15px;\n-webkit-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\n-moz-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\nbox-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\">\n  <div class=\"col-sm-12\" style=\"text-align:center;\">\n    Login\n  </div>\n\n  <div class=\"col-sm-12\">\n    <form [formGroup]=\"loginForm\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"passwordInput\">Password</label>\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"passwordInput\" aria-describedby=\"passHelp\" placeholder=\"password\">\n        <small id=\"passHelp\" class=\"form-text text-muted\"></small>\n      </div>\n\n      <div class=\"form-group\" style=\"text-align:center;\">\n          <button type=\"button\" class=\"btn btn-dark\" (click)=\"login()\">Log in</button>\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"moveToRegister()\">Register</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { tap, catchError } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm:FormGroup = new FormGroup({\n    email:new FormControl(null,[Validators.email,Validators.required]),\n    username:new FormControl(null,Validators.required),\n    password:new FormControl(null,Validators.required),\n    cpass:new FormControl(null,Validators.required)\n  })\n  constructor(private _router:Router, private _userService:UserService, private _snackBar:MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  moveToLogin(){\n    this._router.navigate(['/login']);\n  }\n\n  register(){\n    if(!this.registerForm.valid || (this.registerForm.controls.password.value != this.registerForm.controls.cpass.value)){\n      this._snackBar.open(\"invalid form\",'X',{duration:4000}); return;\n    }\n    this._userService.register(JSON.stringify(this.registerForm.value)).\n    pipe(\n      tap((res:User)=>{\n      console.log(res);\n      this._router.navigate(['/login']);\n    },\n    catchError((error)=>{\n      this._snackBar.open(\"Invalid value\",'X',{\n        duration:5000\n      });\n      throw error;\n    })\n  )).subscribe();\n  }\n}","<div class=\"row\" style=\"margin-top:40px; padding:20px; background-color:#00CED1;border-radius:15px;\n-webkit-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\n-moz-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\nbox-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\">\n\n  <div class=\"col-sm-12\">\n    <form [formGroup]=\"registerForm\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n          <label for=\"exampleInputUsername\">Username</label>\n          <input formControlName=\"username\" type=\"text\" class=\"form-control\" id=\"exampleInputUsername\" aria-describedby=\"userHelp\" placeholder=\"username\">\n          <small id=\"userHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"passwordInput\">Password</label>\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"passwordInput\" aria-describedby=\"passHelp\" placeholder=\"password\">\n        <small id=\"passHelp\" class=\"form-text text-muted\"></small>\n      </div>\n      <div class=\"form-group\">\n          <label for=\"CpasswordInput\">Confirm Password</label>\n          <input formControlName=\"cpass\" type=\"password\" class=\"form-control\" id=\"CpasswordInput\" aria-describedby=\"CpassHelp\" placeholder=\"password\">\n          <small id=\"CpassHelp\" class=\"form-text text-muted\"></small>\n        </div>\n      <div class=\"form-group\" style=\"text-align:center;\">\n          <button type=\"button\" class=\"btn btn-dark\" (click)=\"register()\">Register</button>\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"moveToLogin()\">Log in</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UpdateBalance} from './updateBalance.model';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport {UserResponse, User} from './models/user.model';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private _http:HttpClient, protected localStorage:LocalStorage) { }\n\n  // ngOnInit(){\n  //   document.getElementById('_id').addEventListener('submit', function(){\n  //     var id = document.getElementById('')\n  //   })\n  //   console.log(this.localStorage.getItem('_id'))\n  //   }\n  \n\n  register(body:any){\n    return this._http.post('users/register',body,{\n      observe:'body', \n      headers: new HttpHeaders().append('Content-Type','application/json')\n    });\n  }\n\n  login(body:any): Observable<UserResponse>{\n    return this._http.post<UserResponse>('users/login',body,{\n      observe:'body', \n      withCredentials:true,\n      headers: new HttpHeaders().append('Content-Type','application/json')\n    });\n  }\n\n  user(): Observable<User>{\n    return this._http.get<User>('users/user',{\n      observe:'body', \n      withCredentials:true,\n      headers: new HttpHeaders().append('Content-Type','application/json')\n    })\n  }\n\n  logout(){\n    return this._http.get('users/logout',{\n      observe:'body', \n      withCredentials:true,\n      headers: new HttpHeaders().append('Content-Type','application/json')\n    })\n  }\n\n  UpdateBalance(update:UpdateBalance){\n    return this._http.post('users/update', update)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { error } from 'protractor';\nimport {FormGroup,FormControl, Validators} from '@angular/forms';\nimport { UpdateBalance } from '../updateBalance.model';\nimport { tap, catchError } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-userhome',\n  templateUrl: './userhome.component.html',\n  styleUrls: ['./userhome.component.css']\n})\nexport class UserhomeComponent implements OnInit {\n\n  depositeForm : FormGroup = new FormGroup({\n  balance:new FormControl(null,Validators.required)\n  });\n\n  //variables\n  username:String='';\n  balance:number=0;\n  newBalance:number=0;\n  id:string='';\n\n  constructor(private _user:UserService, private _router:Router, private _snackBar:MatSnackBar) {}\n  \n  ngOnInit(): void {\n    this._user.user()\n    .pipe(\n      tap((res:User)=>{\n        this.username=res.username;\n        this.balance=res.balance;\n      }),\n      catchError((error)=>{\n        this._snackBar.open(error,'X',{\n          duration:5000\n        });\n        this._router.navigate(['/login']);\n        throw error;\n      })\n    ).subscribe();\n  }\n\n  logout(){\n    this._user.logout()\n    .pipe(\n      tap((res:User)=>{\n      console.log(res);\n      this._router.navigate(['/login']);\n      }),\n      catchError((error)=>{\n        this._snackBar.open(error,'X',{\n          duration:5000\n        });\n        throw error;\n      })\n    ).subscribe();\n  }\n\n  updateBalance(){\n    const userId = localStorage.getItem('_id');\n    this.balance+= this.newBalance;\n    const update ={\n      _id: userId,\n      balance: this.balance\n    } as UpdateBalance;\n\n  this._user.UpdateBalance(update).\n  pipe(\n    tap((res:User)=>{\n    console.log(res);\n    this._router.navigate(['/user']);\n    }),\n    catchError((error)=>{\n      this._snackBar.open('Invalid value','X',{\n        duration:5000\n      });\n      throw error;\n    })\n  ).subscribe();\n}\n\n  withdrawBalance(){\n    const userId = localStorage.getItem('_id');\n    this.balance-= this.newBalance;\n    const update ={\n      _id: userId,\n      balance: this.balance\n    } as UpdateBalance;\n\n  this._user.UpdateBalance(update).\n  pipe(\n    tap((res:User)=>{ \n    console.log(res); \n    this._router.navigate(['/user']);\n    }),\n    catchError((error)=>{\n      this._snackBar.open(\"Invalid value\",'X',{\n        duration:5000\n      });\n      throw error;\n    })\n  ).subscribe();\n  }\n}\n","<div class=\"row\" style=\"margin-top:40px; background-color:#00CED1;border-radius:15px;\n-webkit-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\n-moz-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\nbox-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\">\n\n  <div class=\"col-sm-12\">\n      <div class=\"jumbotron\">\n          <h1 class=\"display-4\">Hello, {{username}}! </h1>\n          <p class=\"lead\">Your current balance is £{{balance}}.</p>\n          <hr class=\"my-4\">\n          <div class=\"lower-section\">\n            <div class=\"form-group\">\n              <label for=\"deposite-number-input\" class=\"col-0 col-form-label\"></label>\n              <div class=\"col-13\">\n                <input class=\"form-control\" type=\"number\" value=\"\" id=\"deposite_number_input\" placeholder=\"Enter amount to deposite\" [(ngModel)] = 'newBalance'>\n              </div>\n            <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n          </div>\n          \n          <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n              <div class=\"btn-group mr-4\" role=\"group\" aria-label=\"First group\">\n                <button class=\"btn btn-primary btn-lg\" role=\"button\" (click)=\"updateBalance()\">Deposite</button>\n                </div>\n              <div class=\"btn-group mr-3 ml-3\" role=\"group\" aria-label=\"second group\">\n                <button class=\"btn btn-secondary btn-lg\" role=\"button\" (click)=\"withdrawBalance()\">Withdraw</button>\n                </div>\n              <div class=\"btn-group ml-4\" role=\"group\" aria-label=\"third group\">\n                <button class=\"btn btn-danger btn-lg\" role=\"button\" (click)=\"logout()\">Logout</button>\n              </div>\n          </div> \n          </div>\n        </div>\n        </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}